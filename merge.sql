-- MERGE 문을 위한 테스트 테이블 생성
CREATE TABLE M_CUS_CUD_TEST AS
SELECT *
FROM M_CUS MC
;

ALTER TABLE M_CUS_CUD_TEST
	ADD CONSTRAINT PK_M_CUS_CUD_TEST PRIMARY KEY (CUS_ID) USING INDEX
;

-- 고객을 입력하거나 변경하는 SQL
MERGE INTO M_CUS_CUD_TEST MCCT
USING (
	SELECT
	   'CUS_0090' AS CUS_ID
	 	, 'NAME_0090' AS CUS_NM
		, 'A' AS CUS_GD
    FROM DUAL
) T
ON (MCCT.CUS_ID = T.CUS_ID)
WHEN MATCHED THEN
	UPDATE SET
		MCCT.CUS_NM = T.CUS_NM
		, MCCT.CUS_GD = T.CUS_GD
WHEN NOT MATCHED THEN
	INSERT (MCCT.CUS_ID, MCCT.CUS_NM, MCCT.CUS_GD)
	VALUES (T.CUS_ID, T.CUS_NM, T.CUS_GD)
;

-- 월별주문고객 테이블 생성 및 기초 데이터 입력
CREATE TABLE S_CUS_YM (
	BAS_YM VARCHAR2(6) NOT NULL
	, CUS_ID VARCHAR2(40) NOT NULL
	, ITM_TP VARCHAR2(40) NOT NULL
	, ORD_QTY NUMBER(18, 3) NULL
	, ORD_AMT NUMBER(18, 3) NULL
);

CREATE UNIQUE INDEX
	PK_S_CUS_YM ON S_CUS_YM(BAS_YM, CUS_ID, ITM_TP)
;

ALTER TABLE S_CUS_YM
	ADD CONSTRAINT PK_S_CUS_YM PRIMARY KEY (BAS_YM, CUS_ID, ITM_TP)
;

INSERT INTO S_CUS_YM (BAS_YM, CUS_ID, ITM_TP, ORD_QTY, ORD_AMT)
SELECT
   '201702' AS BAS_YM
	, MC.CUS_ID
	, CBC.BAS_CD AS ITM_TP
	, NULL AS ORD_QTY
	, NULL AS ORD_AMT
FROM M_CUS MC, C_BAS_CD CBC
WHERE CBC.BAS_CD_DV = 'ITM_TP'
AND CBC.LNG_CD = 'KO'
;

-- 월별 주문고객의 주문수량, 주문금액 업데이트
UPDATE S_CUS_YM SCY
SET
	SCY.ORD_QTY = (
		SELECT SUM(TOD.ORD_QTY)
		FROM T_ORD O
			INNER JOIN T_ORD_DET TOD ON TOD.ORD_SEQ = O.ORD_SEQ
			INNER JOIN M_ITM MI ON MI.ITM_ID = TOD.ITM_ID
				AND MI.ITM_TP = SCY.ITM_TP
		WHERE O.CUS_ID = SCY.CUS_ID
		AND O.ORD_DT >= TO_DATE(SCY.BAS_YM || '01', 'YYYYMMDD')
		AND O.ORD_DT < ADD_MONTHS(TO_DATE(SCY.BAS_YM || '01', 'YYYYMMDD'), 1)
	),
    SCY.ORD_AMT = (
		SELECT SUM(TOD.UNT_PRC * TOD.ORD_QTY)
		FROM T_ORD O
			INNER JOIN T_ORD_DET TOD ON TOD.ORD_SEQ = O.ORD_SEQ
			INNER JOIN M_ITM MI ON MI.ITM_ID = TOD.ITM_ID
			    AND MI.ITM_TP = SCY.ITM_TP
		WHERE O.CUS_ID = SCY.CUS_ID
		  AND O.ORD_DT >= TO_DATE(SCY.BAS_YM || '01', 'YYYYMMDD')
		  AND O.ORD_DT < ADD_MONTHS(TO_DATE(SCY.BAS_YM || '01', 'YYYYMMDD'), 1)
	)
WHERE SCY.BAS_YM = '201702'
;

-- 월별 주문고객의 주문수량, 주문금액 업데이트, MERGE문 사용
MERGE INTO S_CUS_YM SCY
USING (
	SELECT
		O.CUS_ID
		, MI.ITM_TP
		, SUM(TOD.ORD_QTY) AS ORD_QTY
		, SUM(TOD.UNT_PRC * TOD.ORD_QTY) AS ORD_AMT
	FROM T_ORD O
		INNER JOIN T_ORD_DET TOD ON TOD.ORD_SEQ = O.ORD_SEQ
		INNER JOIN M_ITM MI ON MI.ITM_ID = TOD.ITM_ID
	WHERE O.ORD_DT >= TO_DATE('201702' || '01', 'YYYYMMDD')
	  AND O.ORD_DT < ADD_MONTHS(TO_DATE('201702' || '01', 'YYYYMMDD'), 1)
    GROUP BY O.CUS_ID, MI.ITM_TP
) T
ON (
	SCY.BAS_YM = '201702'
    AND SCY.CUS_ID = T.CUS_ID
    AND SCY.ITM_TP = T.ITM_TP
)
WHEN MATCHED THEN
	UPDATE SET
		SCY.ORD_QTY = T.ORD_QTY
		, SCY.ORD_AMT = T.ORD_AMT
;

-- 월별 주문고객의 주문수량, 주문금액 업데이트, 반복서브쿼리 제거
UPDATE S_CUS_YM SCY
SET (SCY.ORD_QTY, SCY.ORD_AMT) = (
	SELECT
   		SUM(TOD.ORD_QTY) AS ORD_QTY
		, SUM(TOD.UNT_PRC * TOD.ORD_QTY) AS ORD_AMT
	FROM T_ORD O
		INNER JOIN T_ORD_DET TOD ON TOD.ORD_SEQ = O.ORD_SEQ
		INNER JOIN M_ITM MI ON MI.ITM_ID = TOD.ITM_ID
		    AND MI.ITM_TP = SCY.ITM_TP
	WHERE O.CUS_ID = SCY.CUS_ID
	  AND O.ORD_DT >= TO_DATE(SCY.BAS_YM || '01', 'YYYYMMDD')
	  AND O.ORD_DT < ADD_MONTHS(TO_DATE(SCY.BAS_YM || '01', 'YYYYMMDD'), 1)
    GROUP BY O.CUS_ID, MI.ITM_TP
)
WHERE SCY.BAS_YM = '201702'
;